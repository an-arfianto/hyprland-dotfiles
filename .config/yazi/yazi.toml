"$schema" = "https://yazi-rs.github.io/schemas/yazi.json"

[manager]
ratio          = [1, 4, 3]
sort_by        = "alphabetical"
sort_sensitive = false
sort_reverse   = false
sort_dir_first = true
sort_translit  = false
linemode       = "none"
show_hidden    = true
show_symlink   = true
scrolloff      = 5
mouse_events   = [ "click", "scroll" ]
title_format   = "Yazi: {cwd}"

[preview]
wrap            = "no"
tab_size        = 2
max_width       = 600
max_height      = 900
cache_dir       = ""
image_delay     = 30
image_filter    = "triangle"
image_quality   = 75
sixel_fraction  = 15
ueberzug_scale  = 1
ueberzug_offset = [ 0, 0, 0, 0 ]

[opener]
folder = [
  { run = 'xdg-open "$@"', orphan = true, desc = "xdg-open", for = "linux" },
  { run = '''bash -c "nvim "$1""''', block = true, desc = "neovim", for = "linux" },
  { run = 'kitty --detach nvim "$@"', orphan = true, desc = "neovim (detached)", for = "linux" },
  { run = '''bash -c "lazygit -p "$1""''', block = true, desc = "lazygit", for = "linux" },
  { run = 'code  "$@"', orphan = true, desc = "vscode", for = "linux" },
  { run = 'kitty "$@"', orphan = true, desc = "kitty", for = "linux" },
]

text = [
  { run = 'xdg-open "$@"', orphan = true, desc = "xdg-open", for = "linux" },
  { run = 'nano "$@"', block = true, desc = "nano", for = "linux" },
  { run = 'nvim "$@"', block = true, desc = "neovim", for = "linux" },
  { run = 'kitty --detach nvim "$@"', block = true, desc = "neovim (detached)", for = "linux" },
  { run = 'code  "$@"', orphan = true, desc = "vscode", for = "linux" },
]

document = [
  { run = 'xdg-open "$@"', orphan = true, desc = "xdg-open", for = "linux" },
  { run = 'zathura "$@"', orphan = true, desc = "zathura", for = "linux" },
  { run = 'libreoffice "$@"', orphan = true, desc = "libreoffice", for = "linux" },
]

image = [
  { run = 'xdg-open "$@"', orphan = true, desc = "xdg-open", for = "linux" },
  { run = 'qimgv "$@"', orphan = true, desc = "gimgv", for = "linux" },
  { run = 'gimp "$@"', orphan = true, desc = "gimp", for = "linux" },
]

video = [
  { run = 'xdg-open "$@"', orphan = true, desc = "xdg-open", for = "linux" },
  { run = 'mpv "$@"', orphan = true, desc = "mpv", for = "linux" },
]

audio = [
  { run = 'xdg-open "$@"', orphan = true, desc = "xdg-open", for = "linux" },
  { run = 'mpv "$@"', orphan = true, desc = "mpv", for = "linux" },
]

fallback = [
  { run = 'xdg-open "$@"', orphan = true, desc = "xdg-open", for = "linux" },
]

extract = [
  { run = 'xdg-open "$@"', orphan = true, desc = "xdg-open", for = "linux" },
	{ run = 'ouch d -y "$@"', desc = "Extract here", for = "linux" },
]

[open]
rules = [
  { name = "*/", use = "folder" },

  { mime = "text/*", use = "text" },
  { mime = "image/*", use = "image" },
  { mime = "video/*", use = "video" },
  { mime = "application/octet-stream", use = "video" },
  { mime = "audio/*", use = "audio" },
  { mime = "inode/x-empty", use = "text" },
  { mime = "application/json", use = "text" },

  { mime = "application/zip", use = "extract" },
  { mime = "application/gzip", use = "extract" },
  { mime = "application/x-bzip", use = "extract" },
  { mime = "application/x-bzip2", use = "extract" },
  { mime = "application/x-tar", use = "extract" },
  { mime = "application/x-7z-compressed", use = "extract" },
  { mime = "application/x-rar", use = "extract" },
  { mime = "application/pdf", use = "document" },
  { mime = "application/epub+zip", use = "document" },
  { mime = "application/x-mobipocket-ebook", use = "document" },

  { mime = "*", use = "fallback" },
]

[[plugin.prepend_fetchers]]
id = "git"
name = "*"
run = "git"

[[plugin.prepend_fetchers]]
id = "git"
name = "*/"
run = "git"

[plugin]
prepend_previewers = [
	# Archive previewer
	{ mime = "application/*zip",            run = "ouch" },
	{ mime = "application/x-tar",           run = "ouch" },
	{ mime = "application/x-bzip2",         run = "ouch" },
	{ mime = "application/x-7z-compressed", run = "ouch" },
	{ mime = "application/x-rar",           run = "ouch" },
  { mime = "application/x-xz",            run = "ouch" },
	{ mime = "application/xz",              run = "ouch" },
]

[input]
cursor_blink = false

# cd
cd_title  = "Change directory:"
cd_origin = "top-center"
cd_offset = [ 0, 2, 50, 3 ]

# create
create_title = ["Create:", "Create (dir):"]
create_origin = "top-center"
create_offset = [ 0, 2, 50, 3 ]

# rename
rename_title  = "Rename:"
rename_origin = "hovered"
rename_offset = [ 0, 1, 50, 3 ]

# filter
filter_title  = "Filter:"
filter_origin = "top-center"
filter_offset = [ 0, 2, 50, 3 ]

# find
find_title  = [ "Find next:", "Find previous:" ]
find_origin = "top-center"
find_offset = [ 0, 2, 50, 3 ]

# search
search_title  = "Search via {n}:"
search_origin = "top-center"
search_offset = [ 0, 2, 50, 3 ]

# shell
shell_title  = [ "Shell:", "Shell (block):" ]
shell_origin = "top-center"
shell_offset = [ 0, 2, 50, 3 ]

[confirm]
# trash
trash_title 	= "Trash {n} selected file{s}?"
trash_origin	= "center"
trash_offset	= [ 0, 0, 70, 20 ]

# delete
delete_title 	= "Permanently delete {n} selected file{s}?"
delete_origin	= "center"
delete_offset	= [ 0, 0, 70, 20 ]

# overwrite
overwrite_title   = "Overwrite file?"
overwrite_content = "Will overwrite the following file:"
overwrite_origin  = "center"
overwrite_offset  = [ 0, 0, 50, 15 ]

# quit
quit_title   = "Quit?"
quit_content = "The following task is still running, are you sure you want to quit?"
quit_origin  = "center"
quit_offset  = [ 0, 0, 50, 15 ]

[select]
open_title  = "Open with:"
open_origin = "hovered"
open_offset = [ 0, 1, 50, 7 ]

[which]
sort_by      	 = "none"
sort_sensitive = false
sort_reverse 	 = false
sort_translit  = false

[log]
enabled = false
